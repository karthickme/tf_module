name: "Terraform Validation & Security Scan"
permissions:
  contents: read
  security-events: write

on:
  pull_request:
    branches:
      - main
      - 'release/**'
  push:
    branches:
      - main
      - 'feature/**'
      - 'bugfix/**'
  workflow_dispatch:  # Manual trigger

jobs:
  terraform-validation:
    name: "Terraform Validation"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"  # You can adjust this version

      - name: Initialize Terraform
        run: |
          for d in modules/*/; do
            echo "Initializing Terraform in $d"
            cd $d
            terraform init -backend=false
            terraform validate
            cd ../../
          done

  security-scan:
    name: "Trivy Security Scan"
    needs: terraform-validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: 'modules'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()  # This ensures the results are uploaded even if the scan finds vulnerabilities
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'Trivy-Scan'